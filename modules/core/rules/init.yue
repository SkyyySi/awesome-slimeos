import "awful"
import "ruled"
import "naughty"

import client from _G

export default (kwargs={}) ->
	with kwargs
		assert(.config)

	ruled.client.connect_signal("request::rules", () ->
		ruled.client.append_rule {
			id:         "global"
			rule:       {}
			properties: {
				focus:     awful.client.focus.filter
				raise:     true
				screen:    awful.screen.preferred
				placement: awful.placement.no_overlap + awful.placement.no_offscreen
			}
		}

		ruled.client.append_rule {
			id:       "floating"
			rule_any: {
				instance: {
					"copyq"
					"pinentry"
				}
				class: {
					"Arandr"
					"Blueman-manager"
					"Gpick"
					"Kruler"
					"Sxiv"
					"Tor Browser"
					"Wpa_gui"
					"veromix"
					"xtightvncviewer"
				}
				name: {
					"Event Tester"  -- xev.
				}
				role: {
					"AlarmWindow"    -- Thunderbird's calendar.
					"ConfigManager"  -- Thunderbird's about:config.
					"pop-up"         -- e.g. Google Chrome's (detached) Developer Tools.
				}
			}
			properties: {
				floating: true
			}
		}

		ruled.client.append_rule {
			id:         "titlebars"
			rule_any: {
				type: {
					"normal"
					"dialog"
				}
			}
			properties: {
				titlebars_enabled: true
			}
		}

		ruled.client.append_rule(kwargs.config.rules)
	)

	ruled.notification.connect_signal("request::rules", () ->
		ruled.notification.append_rule {
			rule:       {}
			properties: {
				screen:           awful.screen.preferred
				implicit_timeout: 5
			}
		}
	)

	naughty.connect_signal("request::display", (n) ->
		naughty.layout.box {
			notification: n
		}
	)

	client.connect_signal("mouse::enter", (c) ->
		c::activate {
			context: "mouse_enter"
			raise:   false
		}
	)
